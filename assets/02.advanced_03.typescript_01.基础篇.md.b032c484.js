import{_ as s,c as a,o as l,a as n}from"./app.b454e50a.js";const F=JSON.parse('{"title":"TypeScript 基础篇","description":"","frontmatter":{},"headers":[{"level":2,"title":"推荐站点和文章","slug":"推荐站点和文章","link":"#推荐站点和文章","children":[]},{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"Typescript 开发环境搭建","slug":"typescript-开发环境搭建","link":"#typescript-开发环境搭建","children":[]},{"level":2,"title":"Typescript 类型声明","slug":"typescript-类型声明","link":"#typescript-类型声明","children":[]}],"relativePath":"02.advanced/03.typescript/01.基础篇.md"}'),p={name:"02.advanced/03.typescript/01.基础篇.md"},e=n(`<h1 id="typescript-基础篇" tabindex="-1">TypeScript 基础篇 <a class="header-anchor" href="#typescript-基础篇">¶</a></h1><h2 id="推荐站点和文章" tabindex="-1">推荐站点和文章 <a class="header-anchor" href="#推荐站点和文章">¶</a></h2><ul><li><a href="https://www.tslang.cn/index.html" target="_blank" rel="noreferrer">TypeScript中文网</a></li><li><a href="https://juejin.cn/post/6844904035309322254" target="_blank" rel="noreferrer">TypeScript、Rollup 搭建工具库</a></li></ul><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介">¶</a></h2><ul><li>类型检查器（Type Checkers）</li><li>以JavaScript为基础构建的语言</li><li>一个JavaScript的超级群</li><li>Typescript扩展了JavaScript并添加了类型</li><li>可以在任何支持JavaScript的平台中执行</li><li>Typescript不能被JavaScript解析器直接执行（Typescript需要编译为JavaScript）</li></ul><p><strong>Typescript增加了什么？</strong></p><ul><li>类型</li><li>支持ES新特性</li><li>添加了ES不具备的新特性</li><li>丰富的配置选项</li><li>强大的开发工具</li></ul><h2 id="typescript-开发环境搭建" tabindex="-1">Typescript 开发环境搭建 <a class="header-anchor" href="#typescript-开发环境搭建">¶</a></h2><ul><li>安装 Node 的运行环境</li><li>全局安装 Typescript</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or</span></span>
<span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">global</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">typescript</span></span>
<span class="line"></span></code></pre></div><ul><li>建立项目目录和编译ts文件</li></ul><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 盘符目录:</span></span>
<span class="line"><span style="color:#FFCB6B;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TypescriptDemo</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TypescriptDemo</span></span>
<span class="line"></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// helloworld.ts</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">greeter</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">person</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">person</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> user</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Jane User</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> person </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">greeter</span><span style="color:#A6ACCD;">(user)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(person)</span></span>
<span class="line"></span></code></pre></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 执行命令</span></span>
<span class="line"><span style="color:#FFCB6B;">tsc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">helloworld.ts</span></span>
<span class="line"><span style="color:#FFCB6B;">node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">helloworld.js</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">提示</p><p><code>tsc</code> 执行TS文件每次都需要执行一次，可使用<code>ts-node</code>包去支持TS在Node运行环境</p></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 全局安装</span></span>
<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-g</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ts-node</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 直接运行</span></span>
<span class="line"><span style="color:#FFCB6B;">ts-node</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">helloworld.ts</span></span>
<span class="line"></span></code></pre></div><h2 id="typescript-类型声明" tabindex="-1">Typescript 类型声明 <a class="header-anchor" href="#typescript-类型声明">¶</a></h2><ul><li>类型声明是TS非常重要的一个特点；</li><li>通过类型声明可以指定TS中变量（参数、形参）的类型；</li><li>指定类型后，当为变量赋值时，TS编译器会自动检查值是否符合类型声明，符合则赋值，否则报错；</li><li>简而言之，类型声明给变量设置了类型，使得变量只能存储某种类型的值；</li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 语法</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> variableName1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Type</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> variableName2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> value</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fn</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">parameter1</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Type</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">parameter2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Type</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// todo</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,19),o=[e];function t(c,r,i,y,C,D){return l(),a("div",null,o)}const d=s(p,[["render",t]]);export{F as __pageData,d as default};
