import{_ as e,c as a,o as r,a as l}from"./app.b454e50a.js";const k=JSON.parse('{"title":"Node框架","description":"","frontmatter":{},"headers":[{"level":2,"title":"koa","slug":"koa","link":"#koa","children":[]},{"level":2,"title":"egg","slug":"egg","link":"#egg","children":[{"level":3,"title":"学习文章","slug":"学习文章","link":"#学习文章","children":[]}]},{"level":2,"title":"推荐站点","slug":"推荐站点","link":"#推荐站点","children":[]}],"relativePath":"02.advanced/05.node/05.Node框架.md"}'),t={name:"02.advanced/05.node/05.Node框架.md"},n=l('<h1 id="node框架" tabindex="-1">Node框架 <a class="header-anchor" href="#node框架">¶</a></h1><h2 id="koa" tabindex="-1">koa <a class="header-anchor" href="#koa">¶</a></h2><p><a href="https://koa.bootcss.com/" target="_blank" rel="noreferrer">koa</a>框架由Express原班人马打造，它的核心是ES6的generator。KOA使用generator来实现中间件的流程控制，使用try/catch来增强异常处理，同时在KOA框架中你再也看不到复杂的callback回调了。KOA框架本身非常小，只打包了一些必要的功能，但是它本身通过良好的模块化组织，让开发人员可以按照自己的想法来实现一个扩展性非常好的应用。</p><ul><li>koa解决的最大问题，利用async await的新语法特性，解决回调地狱的问题。</li></ul><p>koa 与 express 最大的不同，个人觉得有3点:</p><ol><li><p>在于 handler 的处理方法，express 是普通的回调函数， koa 是利用ES7 中 Async/Await 的特性，没有回调，没有回调，就大大加速了开发速度这一点而言，已经足以让我们跪舔了</p></li><li><p>koa是洋葱中间件模式，执行到next的时候，会去调用下一个中间件，下个中间件执行完再接着执行上个中间件next下面的代码</p></li><li><p>koa把 request, response 封装到了同一个上下文对象 content</p></li></ol><h2 id="egg" tabindex="-1">egg <a class="header-anchor" href="#egg">¶</a></h2><p><a href="https://eggjs.org/zh-cn/" target="_blank" rel="noreferrer">egg</a>是基于koa，由阿里nodejs团队封装的企业级Web应用解决方案，以约束和规范化团队开发，帮助开发团队和开发人员降低开发和维护成本为核心设计理念的优秀解决方案。它有如下特点：</p><ul><li>提供基于Egg定制上层框架的能力</li><li>高度可扩展的插件机制</li><li>内置多进程管理（Node是单进程，无法使用多核CPU的能力）</li><li>基于Koa开发，性能优异</li><li>框架稳定，测试覆盖率高</li><li>渐进式开发，逐步模块化模式</li></ul><p>Egg已经被用在阿里多条产品线（包括蚂蚁）上，已经证明它的安全和可靠性，可以放心用。</p><h3 id="学习文章" tabindex="-1">学习文章 <a class="header-anchor" href="#学习文章">¶</a></h3><ul><li><a href="https://juejin.cn/post/6995063516470198279" target="_blank" rel="noreferrer">学习egg.js，看这一篇就够了！</a></li><li><a href="https://juejin.cn/post/6844904052896038926" target="_blank" rel="noreferrer">Egg + React 实战日记本</a></li><li><a href="https://juejin.cn/post/6847902222978646023" target="_blank" rel="noreferrer">egg-mongoose使用总结</a></li><li><a href="https://juejin.cn/post/6844903998013571080" target="_blank" rel="noreferrer">使用WebSocket在vue和egg进行实时通信</a></li><li><a href="https://juejin.cn/post/6844904161692090376#heading-1" target="_blank" rel="noreferrer">React+Egg实现前后端分离个人网站</a></li></ul><h2 id="推荐站点" tabindex="-1">推荐站点 <a class="header-anchor" href="#推荐站点">¶</a></h2><ul><li><a href="https://cnodejs.org/topic/5ec2863767c8a45803da06ad" target="_blank" rel="noreferrer">React+Egg实现前后端分离个人博客网站</a></li></ul>',14),o=[n];function i(s,c,h,d,g,p){return r(),a("div",null,o)}const f=e(t,[["render",i]]);export{k as __pageData,f as default};
